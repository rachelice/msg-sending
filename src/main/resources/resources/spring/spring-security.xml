<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	<!-- 登录验证器：用户有没有登录的资格 -->


	<!-- 用户拥有的权限：登录后取得用户所保有的权限信息 -->
	<authentication-manager alias="myAuthenticationManager">
		<authentication-provider user-service-ref="myUserDetailService">

		</authentication-provider>
		<authentication-provider ref="loginAuthenticationProvider">
		</authentication-provider>
	</authentication-manager>


	<beans:bean id="loginAuthenticationProvider"
		class="com.sunshineroad.system.security.service.impl.LoginAuthenticationProvider">
		<beans:property name="UserDetailsService" ref="myUserDetailService" />

	</beans:bean>


	<beans:bean id="MD5Encoder" class="com.sunshineroad.framework.util.MD5Encoder" />


	<beans:bean id="myAuthenticationFilter"
		class="com.sunshineroad.system.security.service.impl.MyAuthenticationFilter">
		<beans:property name="authenticationManager" ref="myAuthenticationManager" />
		<beans:property name="filterProcessesUrl" value="/j_spring_security_check" />
		<beans:property name="authenticationSuccessHandler" ref="authenticationHandler">
<!-- 			<beans:bean
				class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
				<beans:property name="defaultTargetUrl" value="/index.jsp" />
			</beans:bean> -->
		</beans:property>
		<beans:property name="authenticationFailureHandler" ref="authenticationHandler">
<!-- 			<beans:bean
				class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
				<beans:property name="defaultFailureUrl" value="/login.jsp" />
			</beans:bean> -->
		</beans:property>

	</beans:bean> 
	
	
	<http pattern="/freeTableController/**" security="none" />
	<http pattern="/sysCustomSql/**" security="none" />
	<http pattern="/absolute/simple-reports/**" security="none" />
	<http pattern="/toExcel/**" security="none" />
	<http pattern="/sysParameter/**" security="none" />
	<http pattern="/resources/TreeJson" security="none" />
	<http pattern="/resource/child" security="none" />
	<http pattern="/StationGe/getstationgelist" security="none" />
	<http pattern="/roles/**" security="none" />
	<http pattern="/login.jsp" security="none" />
	<http pattern="/timeout.jsp" security="none"/>
	<http pattern="/webservices/getstationgelist" security="none" />
	<http pattern="/captcha.jsp" security="none" />	
	<http pattern="/exportexcel.jsp" security="none" />
	<http pattern="/spring*" security="none" />
	<http pattern="/css/**" security="none" />
<!-- 	<http pattern="/user/**" security="none" /> -->
	<http pattern="/images/**" security="none" />
	<http pattern="/inc/**" security="none" />
	<http pattern="/module/**" security="none" />
	<http pattern="/js/**" security="none" />
	<http pattern="js/**" security="none" />
<!-- 	<http pattern="/resource/**" security="none" /> -->
	<http pattern="/login/**" security="none" />

	<http pattern="/access-denied.jsp" security="none" />
	<http use-expressions='true' entry-point-ref="myAuthenticationEntryPoint"
		access-denied-page="/access-denied.jsp">

		<!-- 关联代码：com.sunshineroad.framework.context.security.MySecurityMetadataSource#loadResourceDefine -->
		<!-- 关联代码：com.sunshineroad.framework.context.security.MyUserDetailServiceImpl#obtionGrantedAuthorities -->
		<!-- "ROLE_"固定，AAA为权限：注意对于我的例子其实是RESOURCES表的NAME字段的值 -->
		<!-- ↓↓↓SPRING默认的访问权限控制↓↓↓ -->
		<intercept-url pattern="/d.jsp" access="ROLE_AAA" />
		<intercept-url pattern="/e.jsp" access="ROLE_BBB" />
		<!-- 注意： com.sunshineroad.framework.context.security.MyAccessDecisionManager是自已实现的权限控制 -->
		<!-- 注意： 不但要满足自己实现的权限控制还要满足SPRING默认的访问权限控制才可以访问特定资源 -->

		<!-- 会话管理 -->
		<session-management invalid-session-url="/index.jsp">
			<concurrency-control max-sessions="1000"
				error-if-maximum-exceeded="true" />
		</session-management>

		<!-- 认证和授权 -->
 		<custom-filter ref="myAuthenticationFilter" position="FORM_LOGIN_FILTER"  />
		<custom-filter ref="myAuthorizationFilter" before="FILTER_SECURITY_INTERCEPTOR" /> 

		<!-- 登出管理 -->
		<logout invalidate-session="true" logout-url="/j_spring_security_logout" />

	</http>
	
	<!-- 未登录的切入点 -->
	<beans:bean id="myAuthenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/login.jsp"></beans:property>
	</beans:bean>

	<!-- 自定义一个认证成功或失败时的Handler --> 
	<beans:bean id="authenticationHandler" class="com.sunshineroad.system.security.service.impl.AuthenticationHandler" /> 

	<beans:bean id="myUserDetailService"
		class="com.sunshineroad.system.security.service.impl.MyUserDetailServiceImpl">
	</beans:bean>

	<!-- 认证过滤器：判断用户有没有访问特定资源的权限 -->
	<beans:bean id="myAuthorizationFilter"
		class="com.sunshineroad.system.security.service.impl.MyAuthorizationFilter">
		<beans:property ref="myAuthenticationManager" name="authenticationManager" />
		<!-- 用户是否拥有所请求资源的权限 -->
		<beans:property name="accessDecisionManager">
			<beans:bean
				class="com.sunshineroad.system.security.service.impl.MyAccessDecisionManager" />
		</beans:property>
		<!-- 资源与权限对应关系 -->
		<beans:property name="securityMetadataSource">
			<beans:bean
				class="com.sunshineroad.system.security.service.impl.MySecurityMetadataSource">

			</beans:bean>
		</beans:property>

	</beans:bean>
	
</beans:beans>